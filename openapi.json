{
    "openapi": "3.0.3",
    "info": {
        "title": "Library API",
        "description": "API for managing library information",
        "version": "3.0.0"
    },
    "tags": [
        {
            "name": "single",
            "description": "Operations related to single elements"
        },
        {
            "name": "collection",
            "description": "Operations related to more elements"
        }
    ],
    "paths": {
        "/api/library/all": {
            "get": {
                "tags": [
                    "collection"
                ],
                "summary": "Get all libraries",
                "description": "Returns a list of all libraries.",
                "responses": {
                    "200": {
                        "description": "A list of libraries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "response": {
                                        "$ref": "#/components/schemas/Library"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/library/id/{id}": {
            "get": {
                "tags": [
                    "single"
                ],
                "summary": "Get library by ID",
                "description": "Returns a single library by its ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the library",
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "firstLibrary": {
                                "description": "the first library in set",
                                "value": "1"
                            },
                            "secondLibrary": {
                                "description": "the second library in set",
                                "value": "2"
                            },
                            "thirdLibrary": {
                                "description": "the third library in set",
                                "value": "3"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single library",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Library not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "single"
                ],
                "summary": "Delete a library with the given id",
                "description": "Deletes a library if given id exists.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Library"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Library deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "single"
                ],
                "summary": "Update info of an existing library",
                "description": "Updates info of an existing library.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Library"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Library info updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/library/hasWifi": {
            "get": {
                "tags": [
                    "collection"
                ],
                "summary": "Get libraries by name",
                "description": "Returns libraries matching the given name.",
                "parameters": [
                    {
                        "Nudi_wifi": "da",
                        "in": "path",
                        "required": true,
                        "description": "Availability of Wifi",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of libraries with Wifi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "response": {
                                        "$ref": "#/components/schemas/Library"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Libraries not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/library/hasComputer": {
            "get": {
                "tags": [
                    "collection"
                ],
                "summary": "Get libraries by address",
                "description": "Returns libraries matching the given address.",
                "parameters": [
                    {
                        "Nudi_racunalo": "da",
                        "in": "path",
                        "required": true,
                        "description": "The address of the libraries",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of libraries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "response": {
                                        "$ref": "#/components/schemas/Library"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Libraries not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/library": {
            "post": {
                "tags": [
                    "single"
                ],
                "summary": "Create a new library",
                "description": "Adds a new library to the system.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Library"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Library created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Library": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "@context": "https://schema.org/",
                        "@type": "name"
                    },
                    "address": {
                        "@context": "https://schema.org/",
                        "@type": "name",
                        "type": "string"
                    },
                    "manager": {
                        "type": "string"
                    },
                    "workingHours": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "days": {
                                    "type": "string",
                                    "example": "mon-fri"
                                },
                                "hours": {
                                    "type": "string",
                                    "example": "8:00 - 20:00"
                                }
                            }
                        }
                    },
                    "hasWifi": {
                        "type": "string"
                    },
                    "hasWarmDrinks": {
                        "type": "string"
                    },
                    "hasComputer": {
                        "type": "string"
                    },
                    "required": [
                        "id",
                        "name",
                        "address",
                        "manager",
                        "workingHours",
                        "hasWifi",
                        "hasWarmDrinks",
                        "hasComputer"
                    ]
                }
            }
        }
    },
    "servers": [
        {
            "url": "http://localhost:8080/api/library/all",
            "description": "Production server"
        }
    ]
}